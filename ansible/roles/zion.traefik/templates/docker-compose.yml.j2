#jinja2:lstrip_blocks: True
{% macro pomerium_auth(frontend, service, indentlevel) %}
  {% if pomerium_enabled %}
    {% filter indent(width=indentlevel) %}
traefik.{{frontend}}.frontend.auth.forward.address: '{{ pomerium_forward_url }}/?uri=https://{{ service }}'
traefik.{{frontend}}.frontend.auth.forward.authResponseHeaders: 'x-pomerium-authenticated-user-email,x-pomerium-authenticated-user-id,x-pomerium-authenticated-user-groups,x-pomerium-jwt-assertion'
traefik.{{frontend}}.frontend.auth.forward.trustForwardHeader: true
    {% endfilter %}
  {% else %}
    {% if vpn_private_ip %}
      {% filter indent(width=indentlevel) %}
traefik.{{frontend}}.frontend.whiteList.sourceRange: '127.0.0.1, {{vpn_private_ip}}, 192.168.0.0/24'
      {% endfilter %}
    {% else %}
      {% filter indent(width=indentlevel) %}
traefik.{{frontend}}.frontend.whiteList.sourceRange: '127.0.0.1, 192.168.0.0/24'
      {% endfilter %}
    {% endif %}
  {% endif %}
{%- endmacro %}

{% set traefik_host = "traefik." + ansible_facts['domain'] %}
{% set whoami_host = "whoami." + ansible_facts['domain'] %}

# {{ ansible_managed }}
---
version: '3.7'

services:
  traefik:
    image: '{{ traefik_version }}'
    container_name: traefik
    restart: always
    environment:
      # Lets Encrypt cloudflare provider
      CF_API_EMAIL: '{{ cloudflare_api_email }}'
      CF_API_KEY: '{{ cloudflare_api_key }}'
    domainname: '{{ ansible_facts['domain'] }}'
{# Network mode has to be host to have the right ip address #}
    network_mode: host
    ports:
      - '0.0.0.0:80:80'
      - '0.0.0.0:443:443'
      - '0.0.0.0:32400:32400'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.toml:/traefik.toml
      - ./rules:/rules
      - ./acme.json:/acme.json
      - ./logs:/logs
    labels:
      traefik.enable: true
      traefik.dashboard.backend: traefik
      traefik.dashboard.frontend.rule: 'Host: {{ traefik_host }}'
      traefik.dashboard.port: 8080
      {# Only accessible from private network #}
      {{ pomerium_auth("dashboard", traefik_host, 6) }}
      traefik.dashboard.frontend.whiteList.XForwardedFor: true
      {# Security headers #}
      traefik.dashboard.frontend.headers.frameDeny: true
      traefik.dashboard.frontend.headers.browserXSSFilter: true
      traefik.dashboard.frontend.headers.isDevelopment: false
      traefik.dashboard.frontend.headers.forceSTSHeader: true
      traefik.dashboard.frontend.headers.STSPreload: true
      traefik.dashboard.frontend.headers.STSSeconds: 31536000
      traefik.dashboard.frontend.headers.referrerPolicy: same-origin
      {# End security headers #}

  whoami:
    image: containous/whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.whoami.docker.network: '{{ traefik_docker_network }}'
      traefik.whoami.backend: whoami
      traefik.whoami.frontend.rule: 'Host: {{ whoami_host }}'
      # Only accessible from private network
      {{ pomerium_auth("whoami", whoami_host, 6) }}
      {# Security headers #}
      traefik.whoami.frontend.headers.frameDeny: true
      traefik.whoami.frontend.headers.browserXSSFilter: true
      traefik.whoami.frontend.headers.isDevelopment: false
      traefik.whoami.frontend.headers.forceSTSHeader: true
      traefik.whoami.frontend.headers.STSPreload: true
      traefik.whoami.frontend.headers.STSSeconds: 31536000
      traefik.whoami.frontend.headers.referrerPolicy: same-origin
      {# End security headers #}
    networks:
      - {{ traefik_docker_network }}

networks:
  {{ traefik_docker_network }}:
    external: true
